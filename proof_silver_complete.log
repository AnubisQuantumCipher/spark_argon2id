Phase 1 of 3: generation of data representation information ...
Phase 2 of 3: generation of Global contracts ...
Phase 3 of 3: flow analysis and proof ...
spark_argon2id-zeroize.adb:10:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:10:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:10:64: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:11:22: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:24:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:30:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:30:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:31:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:31:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:31:64: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:32:21: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:36:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:37:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:37:67: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:41:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:41:59: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:42:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:49:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:49:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:50:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:50:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:51:21: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:56:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:57:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:64:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:64:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:65:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:65:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:66:21: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:71:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:72:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:86:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:86:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:87:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:87:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:87:35: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:87:48: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:88:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:88:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:88:78: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:89:19: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:89:33: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:89:46: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:89:46: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:93:53: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:93:66: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:93:66: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:97:22: info: assertion proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:98:16: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:98:30: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:98:43: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.adb:98:43: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:9:13: info: implicit aspect Always_Terminates on "Is_Zeroed_Ghost" has been proved, subprogram will terminate
spark_argon2id-zeroize.ads:10:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:13:06: info: data dependencies proved
spark_argon2id-zeroize.ads:14:06: info: flow dependencies proved
spark_argon2id-zeroize.ads:17:13: info: implicit aspect Always_Terminates on "Is_Zeroed" has been proved, subprogram will terminate
spark_argon2id-zeroize.ads:19:06: info: data dependencies proved
spark_argon2id-zeroize.ads:20:06: info: flow dependencies proved
spark_argon2id-zeroize.ads:21:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:26:08: info: data dependencies proved
spark_argon2id-zeroize.ads:27:08: info: flow dependencies proved
spark_argon2id-zeroize.ads:28:19: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:33:08: info: data dependencies proved
spark_argon2id-zeroize.ads:34:08: info: flow dependencies proved
spark_argon2id-zeroize.ads:35:19: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:40:08: info: data dependencies proved
spark_argon2id-zeroize.ads:41:08: info: flow dependencies proved
spark_argon2id-zeroize.ads:42:19: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:47:13: info: implicit aspect Always_Terminates on "Equal" has been proved, subprogram will terminate
spark_argon2id-zeroize.ads:49:08: info: data dependencies proved
spark_argon2id-zeroize.ads:50:08: info: flow dependencies proved
spark_argon2id-zeroize.ads:54:19: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:55:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:55:41: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:55:54: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-zeroize.ads:55:54: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:45:07: info: initialization of "H0" proved
spark_argon2id.adb:47:32: info: length check proved (CVC5: 6 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id.adb:47:43: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:49:07: info: initialization of "Final_Output" proved
spark_argon2id.adb:53:59: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:53:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:54:41: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:56:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:57:10: info: precondition proved (CVC5: 13 VC in max 0.0 seconds and 9 steps)
spark_argon2id.adb:64:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:65:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:72:13: info: initialization of "Init_Blocks" proved
spark_argon2id.adb:74:13: info: precondition proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Z3: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:74:69: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:75:24: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:76:24: info: index check proved (CVC5: 1 VC in max 0.0 seconds and 1 step; Z3: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:84:30: info: precondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id.adb:92:29: warning: statement has no effect
   92 |      Spark_Argon2id.Zeroize.Wipe (H0);
      |      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~

spark_argon2id.adb:92:36: warning: "H0" is set by "Wipe" but not used after the call
   92 |      Spark_Argon2id.Zeroize.Wipe (H0);
      |                                   ^~

spark_argon2id.adb:93:29: warning: statement has no effect
   93 |      Spark_Argon2id.Zeroize.Wipe (Final_Output);
      |      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~

spark_argon2id.adb:93:36: warning: "Final_Output" is set by "Wipe" but not used after the call
   93 |      Spark_Argon2id.Zeroize.Wipe (Final_Output);
      |                                   ^~~~~~~~~~~~

spark_argon2id.adb:96:17: warning: this statement is never reached
   96 |         Output := [others => 0];
      |         ~~~~~~~^~~~~~~~~~~~~~~

spark_argon2id.adb:97:32: warning: this statement is never reached
   97 |         Spark_Argon2id.Zeroize.Wipe (H0);
      |         ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~

spark_argon2id.adb:98:32: warning: this statement is never reached
   98 |         Spark_Argon2id.Zeroize.Wipe (Final_Output);
      |         ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~

spark_argon2id.adb:99:18: warning: this statement is never reached
   99 |         Success := False;
      |         ~~~~~~~~^~~~~~~~
spark_argon2id.adb:115:07: info: initialization of "H0" proved
spark_argon2id.adb:116:32: info: length check proved (CVC5: 6 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id.adb:116:43: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:120:59: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:120:68: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:122:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:123:10: info: precondition proved (CVC5: 13 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:129:37: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:130:41: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:131:41: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:137:13: info: initialization of "Init_Blocks" proved
spark_argon2id.adb:139:13: info: precondition proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Z3: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:139:69: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:140:24: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:141:24: info: index check proved (CVC5: 1 VC in max 0.0 seconds and 1 step; Z3: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:147:30: info: precondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id.adb:149:32: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id.adb:154:29: warning: statement has no effect
  154 |      Spark_Argon2id.Zeroize.Wipe (H0);
      |      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~

spark_argon2id.adb:154:36: warning: "H0" is set by "Wipe" but not used after the call
  154 |      Spark_Argon2id.Zeroize.Wipe (H0);
      |                                   ^~

spark_argon2id.adb:157:17: warning: this statement is never reached
  157 |         Output := [others => 0];
      |         ~~~~~~~^~~~~~~~~~~~~~~

spark_argon2id.adb:158:32: warning: this statement is never reached
  158 |         Spark_Argon2id.Zeroize.Wipe (H0);
      |         ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~

spark_argon2id.adb:159:18: warning: this statement is never reached
  159 |         Success := False;
      |         ~~~~~~~~^~~~~~~~
spark_argon2id.ads:35:07: info: initialization of "Output" proved
spark_argon2id.ads:36:07: info: initialization of "Success" proved
spark_argon2id.ads:38:08: info: data dependencies proved
spark_argon2id.ads:46:08: info: flow dependencies proved
spark_argon2id.ads:48:19: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id.ads:56:07: info: initialization of "Output" proved
spark_argon2id.ads:60:07: info: initialization of "Success" proved
spark_argon2id.ads:62:08: info: data dependencies proved
spark_argon2id.ads:72:08: info: flow dependencies proved
spark_argon2id.ads:74:19: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id.ads:74:78: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:21:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:22:18: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:34:07: info: initialization of "Ref_Lane" proved
spark_argon2id-index.adb:38:34: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:38:34: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:59:07: info: initialization of "Ref_Area" proved
spark_argon2id-index.adb:75:31: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:81:40: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:81:68: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:81:76: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:86:43: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:86:71: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:88:43: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:88:43: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:97:76: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:97:84: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:100:79: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:102:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:121:07: info: initialization of "X" proved
spark_argon2id-index.adb:122:07: info: initialization of "Y" proved
spark_argon2id-index.adb:123:07: info: initialization of "Z" proved
spark_argon2id-index.adb:124:07: info: initialization of "Z_Nat" proved
spark_argon2id-index.adb:125:07: info: initialization of "Relative_Pos" proved
spark_argon2id-index.adb:130:20: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:137:14: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:184:25: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 4042 steps)
spark_argon2id-index.adb:185:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 9926 steps)

spark_argon2id-index.adb:186:07: warning: no check message justified by this pragma
  186>|      pragma Annotate (GNATprove, False_Positive,
  ... | ...
  191 |                       "mapping function guarantees Z < Reference_Area_Size. Verified by manual review.");
spark_argon2id-index.adb:197:47: info: overflow check proved (CVC5: 1 VC in max 0.0 seconds and 1 step; Z3: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:197:47: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step; Z3: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:213:07: info: initialization of "Start_Position" proved
spark_argon2id-index.adb:214:07: info: initialization of "Absolute_Position" proved
spark_argon2id-index.adb:227:47: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:228:28: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:232:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:233:28: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:233:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:236:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:237:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:243:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:244:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 7 steps)
spark_argon2id-index.adb:245:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:283:22: info: assertion justified
spark_argon2id-index.adb:284:51: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 217 steps)
spark_argon2id-index.adb:284:79: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 227 steps)
spark_argon2id-index.adb:306:07: info: initialization of "Temp_Block" proved
spark_argon2id-index.adb:335:39: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:337:28: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.adb:339:28: info: non-aliasing of formal parameters "Y" and "Output" proved
spark_argon2id-index.adb:339:28: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 54 steps)
spark_argon2id-index.adb:343:29: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 11 steps)
spark_argon2id-index.adb:344:28: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.adb:363:07: info: initialization of "Temp_Block" proved
spark_argon2id-index.adb:364:07: info: initialization of "Block_Offset" proved
spark_argon2id-index.adb:368:29: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:381:28: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.adb:383:28: info: non-aliasing of formal parameters "Y" and "Output" proved
spark_argon2id-index.adb:389:28: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.adb:414:07: info: initialization of "Mode" proved
spark_argon2id-index.adb:415:07: info: initialization of "Pseudo_Rand" proved
spark_argon2id-index.adb:416:07: info: initialization of "J1" proved
spark_argon2id-index.adb:417:07: info: initialization of "J2" proved
spark_argon2id-index.adb:418:07: info: initialization of "Ref_Area_Size" proved
spark_argon2id-index.adb:419:07: info: initialization of "Rel_Pos" proved
spark_argon2id-index.adb:420:07: info: initialization of "Same_Lane" proved
spark_argon2id-index.adb:429:10: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:443:24: info: precondition proved (CVC5: 8 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.adb:446:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:449:18: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:452:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:453:22: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:453:32: info: precondition proved (CVC5: 8 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.adb:459:25: info: assertion justified
spark_argon2id-index.adb:464:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:465:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.adb:469:20: info: precondition proved (CVC5: 11 VC in max 0.0 seconds and 1 step; Trivial: 2 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.ads:39:12: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:43:12: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:78:07: info: initialization of "J1" proved
spark_argon2id-index.ads:79:07: info: initialization of "J2" proved
spark_argon2id-index.ads:81:07: info: data dependencies proved
spark_argon2id-index.ads:82:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:82:39: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:83:27: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:96:13: info: implicit aspect Always_Terminates on "Calculate_Ref_Lane" has been proved, subprogram will terminate
spark_argon2id-index.ads:100:07: info: data dependencies proved
spark_argon2id-index.ads:101:17: info: postcondition proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.ads:122:13: info: implicit aspect Always_Terminates on "Calculate_Reference_Area_Size" has been proved, subprogram will terminate
spark_argon2id-index.ads:127:07: info: data dependencies proved
spark_argon2id-index.ads:134:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:160:13: info: implicit aspect Always_Terminates on "Map_J1_To_Position" has been proved, subprogram will terminate
spark_argon2id-index.ads:164:07: info: data dependencies proved
spark_argon2id-index.ads:166:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:181:13: info: implicit aspect Always_Terminates on "Calculate_Ref_Index" has been proved, subprogram will terminate
spark_argon2id-index.ads:187:07: info: data dependencies proved
spark_argon2id-index.ads:201:37: info: precondition proved (CVC5: 8 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.ads:202:17: info: postcondition proved (CVC5: 4 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.ads:205:49: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 259 steps)
spark_argon2id-index.ads:205:77: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 270 steps)
spark_argon2id-index.ads:237:07: info: data dependencies proved
spark_argon2id-index.ads:242:17: info: postcondition proved (CVC5: 8 VC in max 0.0 seconds and 750 steps)
spark_argon2id-index.ads:242:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:243:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 14 steps)
spark_argon2id-index.ads:244:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 5 steps)
spark_argon2id-index.ads:245:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:246:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:247:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:248:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:249:22: info: initialization check proved (CVC5: 1 VC in max 0.0 seconds and 97 steps)
spark_argon2id-index.ads:269:07: info: initialization of "Pseudo_Rand" proved
spark_argon2id-index.ads:271:07: info: data dependencies proved
spark_argon2id-index.ads:273:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.ads:273:58: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:275:27: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:303:07: info: initialization of "Ref_Lane" proved
spark_argon2id-index.ads:304:07: info: initialization of "Ref_Index" proved
spark_argon2id-index.ads:306:07: info: data dependencies proved
spark_argon2id-index.ads:313:17: info: postcondition proved (CVC5: 7 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-index.ads:315:43: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 316 steps)
spark_argon2id-index.ads:315:71: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 317 steps)
spark_argon2id-index.ads:335:13: info: implicit aspect Always_Terminates on "Ref_Index_Valid" has been proved, subprogram will terminate
spark_argon2id-index.ads:344:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:344:78: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-index.ads:350:07: info: data dependencies proved
spark_argon2id-fill.adb:29:13: info: implicit aspect Always_Terminates on "Calculate_Prev_Index" has been proved, subprogram will terminate
spark_argon2id-fill.adb:34:07: info: data dependencies proved
spark_argon2id-fill.adb:36:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:43:07: info: initialization of "Current_Index" proved
spark_argon2id-fill.adb:44:07: info: initialization of "Prev_Index" proved
spark_argon2id-fill.adb:47:32: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:47:60: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:52:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:54:38: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:65:13: info: implicit aspect Always_Terminates on "Calculate_Current_Index" has been proved, subprogram will terminate
spark_argon2id-fill.adb:70:07: info: data dependencies proved
spark_argon2id-fill.adb:72:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:80:22: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:80:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:80:50: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:92:07: info: initialization of "Pos" proved
spark_argon2id-fill.adb:104:07: info: initialization of "Ref_Lane" proved
spark_argon2id-fill.adb:105:07: info: initialization of "Ref_Index" proved
spark_argon2id-fill.adb:108:07: info: initialization of "Prev_Index" proved
spark_argon2id-fill.adb:109:07: info: initialization of "Current_Index" proved
spark_argon2id-fill.adb:112:07: info: initialization of "Prev_Block" proved
spark_argon2id-fill.adb:113:07: info: initialization of "Ref_Block" proved
spark_argon2id-fill.adb:114:07: info: initialization of "Output_Block" proved
spark_argon2id-fill.adb:117:07: info: initialization of "Start_Index" proved
spark_argon2id-fill.adb:118:07: info: initialization of "End_Index" proved
spark_argon2id-fill.adb:156:19: info: precondition proved (CVC5: 192 VC in max 2.5 seconds and 12870 steps)

spark_argon2id-fill.adb:156:49: medium: initialization check might fail
  156 |                  Initialize_Address_Generator (Address_State, Pos);
      |                                                ^~~~~~~~~~~~~
spark_argon2id-fill.adb:175:39: info: loop invariant preservation proved (CVC5: 64 VC in max 0.8 seconds and 8390 steps)
spark_argon2id-fill.adb:175:39: info: loop invariant initialization proved (CVC5: 64 VC in max 0.9 seconds and 8739 steps)
spark_argon2id-fill.adb:176:39: info: loop invariant preservation proved (CVC5: 64 VC in max 0.8 seconds and 8396 steps)
spark_argon2id-fill.adb:176:39: info: loop invariant initialization proved (CVC5: 64 VC in max 0.8 seconds and 8430 steps)
spark_argon2id-fill.adb:177:39: info: loop invariant initialization proved (CVC5: 32 VC in max 2.6 seconds and 12980 steps)
spark_argon2id-fill.adb:177:39: info: loop invariant preservation proved (CVC5: 32 VC in max 0.8 seconds and 8402 steps)
spark_argon2id-fill.adb:178:39: info: loop invariant initialization proved (CVC5: 32 VC in max 2.5 seconds and 12985 steps)
spark_argon2id-fill.adb:178:39: info: loop invariant preservation proved (CVC5: 32 VC in max 0.8 seconds and 8406 steps)
spark_argon2id-fill.adb:179:39: info: loop invariant initialization proved (CVC5: 32 VC in max 0.8 seconds and 8315 steps)
spark_argon2id-fill.adb:179:39: info: loop invariant preservation proved (CVC5: 32 VC in max 0.8 seconds and 8409 steps)
spark_argon2id-fill.adb:180:39: info: loop invariant initialization proved (CVC5: 32 VC in max 0.8 seconds and 8298 steps)
spark_argon2id-fill.adb:180:39: info: loop invariant preservation proved (CVC5: 32 VC in max 2.6 seconds and 13213 steps)
spark_argon2id-fill.adb:181:39: info: loop invariant initialization proved (CVC5: 32 VC in max 0.7 seconds and 8295 steps)
spark_argon2id-fill.adb:181:39: info: loop invariant preservation proved (CVC5: 32 VC in max 2.6 seconds and 13219 steps)
spark_argon2id-fill.adb:182:39: info: loop invariant initialization proved (CVC5: 32 VC in max 0.8 seconds and 8304 steps)
spark_argon2id-fill.adb:182:39: info: loop invariant preservation proved (CVC5: 32 VC in max 0.8 seconds and 8465 steps)
spark_argon2id-fill.adb:183:39: info: loop invariant initialization proved (CVC5: 32 VC in max 0.8 seconds and 8303 steps)
spark_argon2id-fill.adb:183:39: info: loop invariant preservation proved (CVC5: 32 VC in max 0.8 seconds and 8425 steps)
spark_argon2id-fill.adb:185:19: info: loop invariant initialization proved (CVC5: 96 VC in max 0.8 seconds and 8457 steps)
spark_argon2id-fill.adb:185:19: info: loop invariant preservation proved (CVC5: 96 VC in max 0.8 seconds and 8660 steps)
spark_argon2id-fill.adb:197:16: info: precondition proved (CVC5: 256 VC in max 2.5 seconds and 13074 steps; Trivial: 32 VC in max 0.0 seconds and 2 steps)
spark_argon2id-fill.adb:200:50: info: precondition proved (CVC5: 32 VC in max 0.7 seconds and 8303 steps)
spark_argon2id-fill.adb:211:30: info: precondition proved (CVC5: 32 VC in max 0.8 seconds and 8319 steps)
spark_argon2id-fill.adb:228:33: info: precondition proved (CVC5: 32 VC in max 0.8 seconds and 8334 steps)
spark_argon2id-fill.adb:234:16: info: precondition proved (Trivial: 32 VC in max 0.0 seconds and 2 steps)
spark_argon2id-fill.adb:243:45: info: loop invariant initialization proved (CVC5: 64 VC in max 0.8 seconds and 8319 steps)
spark_argon2id-fill.adb:243:45: info: loop invariant preservation proved (CVC5: 64 VC in max 0.8 seconds and 8334 steps)
spark_argon2id-fill.adb:279:07: info: initialization of "Ref_Lane" proved
spark_argon2id-fill.adb:280:07: info: initialization of "Ref_Index" proved
spark_argon2id-fill.adb:281:07: info: initialization of "Prev_Index" proved
spark_argon2id-fill.adb:282:07: info: initialization of "Current_Index" proved
spark_argon2id-fill.adb:283:07: info: initialization of "Prev_Block" proved
spark_argon2id-fill.adb:284:07: info: initialization of "Ref_Block" proved
spark_argon2id-fill.adb:285:07: info: initialization of "Output_Block" proved
spark_argon2id-fill.adb:286:07: info: initialization of "Start_Index" proved
spark_argon2id-fill.adb:287:07: info: initialization of "End_Index" proved
spark_argon2id-fill.adb:290:10: info: precondition proved (CVC5: 6 VC in max 0.0 seconds and 1 step)

spark_argon2id-fill.adb:290:40: medium: initialization check might fail
  290 |         Initialize_Address_Generator (Address_State, Pos);
      |                                       ^~~~~~~~~~~~~
spark_argon2id-fill.adb:302:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:302:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 78 steps)
spark_argon2id-fill.adb:303:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:303:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 83 steps)
spark_argon2id-fill.adb:304:33: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:304:33: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:308:10: info: precondition proved (CVC5: 8 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-fill.adb:311:44: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:317:24: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:321:27: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-fill.adb:323:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-fill.ads:110:07: info: data dependencies proved
spark_argon2id-fill.ads:122:07: info: data dependencies proved
spark_argon2id-mix.adb:16:13: info: implicit aspect Always_Terminates on "Rotr32" has been proved, subprogram will terminate
spark_argon2id-mix.adb:17:19: info: data dependencies proved
spark_argon2id-mix.adb:19:13: info: implicit aspect Always_Terminates on "Rotr24" has been proved, subprogram will terminate
spark_argon2id-mix.adb:20:19: info: data dependencies proved
spark_argon2id-mix.adb:22:13: info: implicit aspect Always_Terminates on "Rotr16" has been proved, subprogram will terminate
spark_argon2id-mix.adb:23:19: info: data dependencies proved
spark_argon2id-mix.adb:25:13: info: implicit aspect Always_Terminates on "Rotr63" has been proved, subprogram will terminate
spark_argon2id-mix.adb:26:19: info: data dependencies proved
spark_argon2id-mix.adb:60:07: info: data dependencies proved

spark_argon2id-mix.adb:62:07: warning: postcondition does not check the outcome of calling "GB"
   62 |      Post   => V'Length = 128,
      |      ^~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:62:17: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:66:07: info: initialization of "A_Mod" proved
spark_argon2id-mix.adb:66:14: info: initialization of "B_Mod" proved
spark_argon2id-mix.adb:66:21: info: initialization of "C_Mod" proved
spark_argon2id-mix.adb:66:28: info: initialization of "D_Mod" proved
spark_argon2id-mix.adb:69:07: info: initialization of "A_Lo" proved
spark_argon2id-mix.adb:69:13: info: initialization of "B_Lo" proved
spark_argon2id-mix.adb:69:19: info: initialization of "C_Lo" proved
spark_argon2id-mix.adb:69:25: info: initialization of "D_Lo" proved
spark_argon2id-mix.adb:158:07: info: data dependencies proved

spark_argon2id-mix.adb:160:07: warning: postcondition does not check the outcome of calling "P"
  160 |      Post   => R'Length = 128
      |      ^~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:160:17: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:168:10: info: data dependencies proved

spark_argon2id-mix.adb:170:10: warning: postcondition does not check the outcome of calling "Blake2_Round"
  170 |         Post   => R'Length = 128,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:170:20: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:175:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:176:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:177:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:178:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:181:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:182:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:183:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:184:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-mix.adb:195:10: warning: pragma "Loop_Optimize" ignored (not yet supported)
  195 |         pragma Loop_Optimize (No_Unroll);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:196:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:196:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:199:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:201:13: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:202:46: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:202:64: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:202:82: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:203:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:203:46: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:203:64: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:203:82: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:204:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:204:46: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:204:64: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:204:82: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:205:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:205:46: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:205:64: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:205:82: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id-mix.adb:217:10: warning: pragma "Loop_Optimize" ignored (not yet supported)
  217 |         pragma Loop_Optimize (No_Unroll);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:218:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:218:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:221:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:223:13: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:224:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:225:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:225:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:226:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:226:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:227:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:227:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:228:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:228:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:229:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:229:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:230:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:230:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:231:28: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-mix.adb:231:47: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id-mix.adb:266:07: warning: initialization of "R" has no effect
  266 |      R : Block := Zero_Block;  -- Temporary for X ⊕ Y
      |      ^~~~~~~~~~~~~~~~~~~~~~~

spark_argon2id-mix.adb:269:14: warning: unused assignment
  269 |      Output := Zero_Block;
      |      ~~~~~~~^~~~~~~~~~~~~

spark_argon2id-mix.adb:276:10: warning: pragma "Loop_Optimize" ignored (not yet supported)
  276 |         pragma Loop_Optimize (No_Unroll);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:277:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:277:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:286:07: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-mix.adb:293:10: warning: pragma "Loop_Optimize" ignored (not yet supported)
  293 |         pragma Loop_Optimize (No_Unroll);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.adb:294:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.adb:294:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-mix.ads:81:07: info: initialization of "Output" proved
spark_argon2id-mix.ads:83:07: info: data dependencies proved

spark_argon2id-mix.ads:86:07: warning: postcondition does not check the outcome of calling "G"
   86 |      Post   => Output'Length = 128;
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-mix.ads:86:17: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:21:13: info: implicit aspect Always_Terminates on "LE32" has been proved, subprogram will terminate
spark_argon2id-hprime.adb:22:22: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:23:39: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:24:40: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:25:40: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:27:07: info: data dependencies proved
spark_argon2id-hprime.adb:28:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)

spark_argon2id-hprime.adb:67:07: warning: initialization of "V" has no effect
   67 |      V : Byte_Array (1 .. 64) := [others => 0];
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

spark_argon2id-hprime.adb:74:07: warning: initialization of "Out_Offset" has no effect
   74 |      Out_Offset : Natural range 0 .. 4096 := 0;
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-hprime.adb:77:07: info: initialization of "Remaining" proved
spark_argon2id-hprime.adb:80:07: info: initialization of "Copy_Count" proved
spark_argon2id-hprime.adb:84:14: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:92:35: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:93:10: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:93:24: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:93:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:93:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:93:38: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:93:47: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:93:50: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:97:17: info: precondition proved (CVC5: 3 VC in max 0.0 seconds and 48 steps)
spark_argon2id-hprime.adb:98:24: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:98:45: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:98:52: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:108:35: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:109:10: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:109:24: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:109:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:109:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:109:38: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:109:47: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:109:50: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:111:17: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 45 steps)
spark_argon2id-hprime.adb:112:24: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:112:45: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:112:52: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:119:10: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:119:24: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:119:47: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:119:47: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:119:53: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:119:56: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:119:56: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:122:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:123:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:123:31: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:130:36: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 135 steps)
spark_argon2id-hprime.adb:130:36: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:131:36: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:131:36: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:132:36: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:132:36: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 197 steps)
spark_argon2id-hprime.adb:132:47: info: division check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:133:36: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:133:36: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:133:42: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 100 steps)
spark_argon2id-hprime.adb:134:36: info: loop invariant initialization proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:134:36: info: loop invariant preservation proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:141:40: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:147:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:150:28: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 21 steps)
spark_argon2id-hprime.adb:151:28: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 30 steps)
spark_argon2id-hprime.adb:152:28: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:153:28: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 34 steps)
spark_argon2id-hprime.adb:159:62: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:161:23: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 241 steps)
spark_argon2id-hprime.adb:168:13: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 98 steps)
spark_argon2id-hprime.adb:168:34: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:168:34: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 133 steps)
spark_argon2id-hprime.adb:168:63: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 46 steps)
spark_argon2id-hprime.adb:168:63: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:168:76: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 63 steps)
spark_argon2id-hprime.adb:168:76: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:168:89: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 72 steps)
spark_argon2id-hprime.adb:168:89: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:168:89: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 144 steps)
spark_argon2id-hprime.adb:168:94: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:169:16: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:169:16: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-hprime.adb:171:38: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 124 steps)
spark_argon2id-hprime.adb:173:28: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.adb:176:25: info: assertion proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.ads:85:07: info: initialization of "Output" proved
spark_argon2id-hprime.ads:87:07: info: data dependencies proved
spark_argon2id-hprime.ads:88:23: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.ads:91:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-hprime.ads:91:23: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 5 steps)
spark_argon2id-init.adb:16:13: info: implicit aspect Always_Terminates on "LE32" has been proved, subprogram will terminate
spark_argon2id-init.adb:17:22: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:18:39: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:19:40: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:20:40: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:22:07: info: data dependencies proved
spark_argon2id-init.adb:23:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:47:13: info: implicit aspect Always_Terminates on "Bytes_To_Block" has been proved, subprogram will terminate
spark_argon2id-init.adb:49:07: info: data dependencies proved

spark_argon2id-init.adb:51:07: warning: postcondition does not check the outcome of calling "Bytes_To_Block"
   51 |      Post   => Bytes_To_Block'Result'Length = 128
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

spark_argon2id-init.adb:51:07: warning: postcondition does not mention function result
   51 |      Post   => Bytes_To_Block'Result'Length = 128
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-init.adb:51:17: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-init.adb:53:07: warning: initialization of "Result" has no effect
   53 |      Result : Block := Zero_Block;
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-init.adb:54:07: info: initialization of "Offset" proved

spark_argon2id-init.adb:57:10: warning: pragma "Loop_Optimize" ignored (not yet supported)
   57 |         pragma Loop_Optimize (No_Unroll);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-init.adb:58:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-init.adb:58:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-init.adb:65:32: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:65:32: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:66:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:66:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:67:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:67:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:68:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:68:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:69:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:69:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:70:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:70:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:71:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:71:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:72:44: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:72:44: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id-init.adb:105:07: warning: initialization of "Block_Bytes" has no effect
  105 |      Block_Bytes : Byte_Array (1 .. 1024) := [others => 0];
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

spark_argon2id-init.adb:109:14: warning: unused assignment
  109 |      Output := (Block_0 => Zero_Block, Block_1 => Zero_Block);
      |      ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-init.adb:116:33: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-init.adb:117:34: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-init.adb:118:34: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-init.adb:120:22: info: assertion proved (Trivial)
spark_argon2id-init.adb:123:13: info: precondition proved (CVC5: 3 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:130:25: info: precondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:138:34: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-init.adb:140:22: info: assertion proved (Trivial)
spark_argon2id-init.adb:143:13: info: precondition proved (CVC5: 3 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.adb:150:25: info: precondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-init.ads:89:07: info: data dependencies proved
spark_argon2id-init.ads:92:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:71:13: info: implicit aspect Always_Terminates on "Total_Blocks" has been proved, subprogram will terminate
spark_argon2id-internal_types.ads:77:15: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:77:35: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:80:13: info: implicit aspect Always_Terminates on "Blocks_Per_Lane" has been proved, subprogram will terminate
spark_argon2id-internal_types.ads:81:30: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:81:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:83:15: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:83:38: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:86:13: info: implicit aspect Always_Terminates on "Blocks_Per_Segment" has been proved, subprogram will terminate
spark_argon2id-internal_types.ads:87:33: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:87:33: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:89:15: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:89:41: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:105:12: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-internal_types.ads:151:13: info: implicit aspect Always_Terminates on "To_Mod" has been proved, subprogram will terminate
spark_argon2id-internal_types.ads:153:07: info: data dependencies proved
spark_argon2id-internal_types.ads:156:13: info: implicit aspect Always_Terminates on "From_Mod" has been proved, subprogram will terminate
spark_argon2id-internal_types.ads:158:07: info: data dependencies proved
spark_argon2id-internal_types.ads:202:13: info: implicit aspect Always_Terminates on "Get_Indexing_Mode" has been proved, subprogram will terminate
spark_argon2id-internal_types.ads:208:07: info: data dependencies proved
spark_argon2id-internal_types.ads:209:17: info: postcondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:24:13: info: implicit aspect Always_Terminates on "LE64" has been proved, subprogram will terminate
spark_argon2id-finalize.adb:25:22: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:26:50: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:27:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:28:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:29:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:30:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:31:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:32:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:34:07: info: data dependencies proved
spark_argon2id-finalize.adb:35:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)

spark_argon2id-finalize.adb:50:07: warning: statement has no effect
   50 |      if Parallelism = 1 then
      |      ^~

spark_argon2id-finalize.adb:51:17: warning: this statement is never reached
   51 |         Output := Memory (0, Active_Blocks_Per_Lane - 1);
      |         ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-finalize.adb:51:54: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:57:79: info: index check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:84:33: info: loop invariant preservation proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:84:33: info: loop invariant initialization proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:90:64: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:91:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:92:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:93:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:94:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:95:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:96:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:97:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:98:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:105:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:105:45: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:106:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:106:73: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:107:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:107:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:108:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:108:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:109:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:109:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:110:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:110:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:111:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:111:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:112:21: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.adb:112:74: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 10 steps)
spark_argon2id-finalize.adb:134:07: info: initialization of "Final_Block" proved
spark_argon2id-finalize.adb:137:07: info: initialization of "Final_Block_Bytes" proved
spark_argon2id-finalize.adb:155:07: info: precondition proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id-finalize.adb:155:36: medium: initialization check might fail
  155 |      Block_To_Bytes (Final_Block, Final_Block_Bytes);
      |                                   ^~~~~~~~~~~~~~~~~
  possible fix: postcondition of call at line 155 should mention Output'Initialized (for argument Final_Block_Bytes)
  155 |      Block_To_Bytes (Final_Block, Final_Block_Bytes);
      |      ^ here
spark_argon2id-finalize.adb:169:22: info: assertion proved (Trivial)
spark_argon2id-finalize.adb:171:07: info: precondition proved (CVC5: 3 VC in max 0.0 seconds and 1 step)

spark_argon2id-finalize.adb:172:27: medium: range check might fail, cannot prove upper bound for Output_Length
  172 |         Output_Length => Output_Length,
      |                          ^~~~~~~~~~~~~
  reason for check: input value must fit in parameter type
  possible fix: add precondition (Output_Length <= Output_Length_Type'Last) to subprogram at spark_argon2id-finalize.ads:152
  152 |   procedure Finalize (
      |             ^ here
spark_argon2id-finalize.ads:81:07: info: initialization of "Output" proved
spark_argon2id-finalize.ads:83:07: info: data dependencies proved
spark_argon2id-finalize.ads:84:17: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-finalize.ads:114:07: info: data dependencies proved
spark_argon2id-finalize.ads:118:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.ads:155:07: info: initialization of "Output" proved
spark_argon2id-finalize.ads:157:07: info: data dependencies proved
spark_argon2id-finalize.ads:158:23: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.ads:160:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-finalize.ads:160:23: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:18:13: info: implicit aspect Always_Terminates on "Rotr32" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:19:19: info: data dependencies proved
spark_argon2id-blake2b.adb:21:13: info: implicit aspect Always_Terminates on "Rotr24" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:22:19: info: data dependencies proved
spark_argon2id-blake2b.adb:24:13: info: implicit aspect Always_Terminates on "Rotr16" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:25:19: info: data dependencies proved
spark_argon2id-blake2b.adb:27:13: info: implicit aspect Always_Terminates on "Rotr63" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:28:19: info: data dependencies proved
spark_argon2id-blake2b.adb:40:13: info: implicit aspect Always_Terminates on "LE_Pack" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:42:06: info: data dependencies proved
spark_argon2id-blake2b.adb:48:38: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:48:38: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:49:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:49:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:50:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:50:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:51:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:51:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:52:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:52:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:53:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:53:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:54:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:54:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:55:50: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:55:50: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:59:13: info: implicit aspect Always_Terminates on "LE_Unpack" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:61:06: info: data dependencies proved
spark_argon2id-blake2b.adb:62:16: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:68:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:70:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:72:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:74:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:76:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:78:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:80:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:82:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id-blake2b.adb:83:14: medium: "Result" might not be initialized
   83 |      return Result;
      |             ^~~~~~
spark_argon2id-blake2b.adb:87:13: info: implicit aspect Always_Terminates on "Bytes_To_Words" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:89:06: info: data dependencies proved

spark_argon2id-blake2b.adb:91:06: warning: postcondition does not check the outcome of calling "Bytes_To_Words"
   91 |     Post   => Bytes_To_Words'Result'Length = 16
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

spark_argon2id-blake2b.adb:91:06: warning: postcondition does not mention function result
   91 |     Post   => Bytes_To_Words'Result'Length = 16
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-blake2b.adb:91:16: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:93:07: info: initialization of "Words" proved
spark_argon2id-blake2b.adb:97:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:97:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:101:49: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:103:26: info: precondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:103:35: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:103:54: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:103:83: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:103:97: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:110:13: info: implicit aspect Always_Terminates on "Words_To_Bytes" has been proved, subprogram will terminate
spark_argon2id-blake2b.adb:112:06: info: data dependencies proved

spark_argon2id-blake2b.adb:114:06: warning: postcondition does not check the outcome of calling "Words_To_Bytes"
  114 |     Post   => Words_To_Bytes'Result'Length = 64
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

spark_argon2id-blake2b.adb:114:06: warning: postcondition does not mention function result
  114 |     Post   => Words_To_Bytes'Result'Length = 64
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-blake2b.adb:114:16: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:120:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:120:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:123:10: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:123:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:123:63: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:123:68: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:123:71: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:125:14: medium: "Result" might not be initialized
  125 |      return Result;
      |             ^~~~~~
spark_argon2id-blake2b.adb:151:06: info: data dependencies proved

spark_argon2id-blake2b.adb:157:06: warning: postcondition does not check the outcome of calling "G"
  157 |     Post   => V'Length = 16
      |     ^~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-blake2b.adb:157:16: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:161:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:161:19: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:161:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:162:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:162:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:162:37: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:163:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:163:19: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:163:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:164:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:164:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:164:37: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:167:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:167:19: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:167:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:168:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:168:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:168:37: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:169:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:169:19: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:169:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:170:10: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:170:27: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:170:37: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:196:07: info: initialization of "M" proved
spark_argon2id-blake2b.adb:197:07: info: initialization of "S" proved
spark_argon2id-blake2b.adb:200:12: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:212:17: medium: "V" might not be initialized
  212 |      V (12) := V (12) xor Counter;
      |                ^ here
spark_argon2id-blake2b.adb:222:33: info: loop invariant initialization proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:222:33: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:225:21: info: division check proved (CVC5: 1 VC in max 0.0 seconds and 171 steps)
spark_argon2id-blake2b.adb:228:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 176 steps)
spark_argon2id-blake2b.adb:228:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 176 steps)
spark_argon2id-blake2b.adb:228:59: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 1009 steps)
spark_argon2id-blake2b.adb:229:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 179 steps)
spark_argon2id-blake2b.adb:229:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 179 steps)
spark_argon2id-blake2b.adb:229:59: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 177 steps)
spark_argon2id-blake2b.adb:230:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 181 steps)
spark_argon2id-blake2b.adb:230:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 181 steps)
spark_argon2id-blake2b.adb:230:59: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 180 steps)
spark_argon2id-blake2b.adb:231:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 184 steps)
spark_argon2id-blake2b.adb:231:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 184 steps)
spark_argon2id-blake2b.adb:231:59: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 183 steps)
spark_argon2id-blake2b.adb:234:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 187 steps)
spark_argon2id-blake2b.adb:234:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 187 steps)
spark_argon2id-blake2b.adb:234:60: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 185 steps)
spark_argon2id-blake2b.adb:235:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 189 steps)
spark_argon2id-blake2b.adb:235:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 190 steps)
spark_argon2id-blake2b.adb:235:60: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 188 steps)
spark_argon2id-blake2b.adb:236:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 192 steps)
spark_argon2id-blake2b.adb:236:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 192 steps)
spark_argon2id-blake2b.adb:236:60: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 191 steps)
spark_argon2id-blake2b.adb:237:10: info: precondition proved (CVC5: 14 VC in max 0.0 seconds and 195 steps)
spark_argon2id-blake2b.adb:237:40: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 195 steps)
spark_argon2id-blake2b.adb:237:60: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 194 steps)
spark_argon2id-blake2b.adb:265:07: info: initialization of "Block" proved
spark_argon2id-blake2b.adb:266:07: info: initialization of "Offset" proved
spark_argon2id-blake2b.adb:267:07: info: initialization of "Remaining" proved
spark_argon2id-blake2b.adb:282:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:282:20: medium: "State" might not be initialized
  282 |         Compress (State, Block, 0, True);
      |                   ^~~~~
spark_argon2id-blake2b.adb:283:20: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:288:24: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:290:26: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:292:31: info: loop variant proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:294:13: info: loop invariant initialization proved (CVC5: 3 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:294:13: info: loop invariant preservation proved (CVC5: 3 VC in max 0.0 seconds and 75 steps)
spark_argon2id-blake2b.adb:295:36: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:296:21: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:296:38: info: division check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:299:19: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:299:19: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:299:45: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:300:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:300:20: medium: "State" might not be initialized
  300 |         Compress (State, Block, U64 (Offset - Message'First + 128), False);
      |                   ^~~~~
spark_argon2id-blake2b.adb:300:46: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:300:62: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:300:62: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:301:27: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:305:33: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:305:42: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:305:42: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:310:10: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:310:17: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:310:22: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:310:33: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:310:36: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:310:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:311:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:311:20: medium: "State" might not be initialized
  311 |         Compress (State, Block, U64 (Message'Length), True);
      |                   ^~~~~
spark_argon2id-blake2b.adb:311:46: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:317:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:317:20: medium: "State" might not be initialized
  317 |         Compress (State, Block, U64 (Message'Length), True);
      |                   ^~~~~
spark_argon2id-blake2b.adb:317:46: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:321:17: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:333:07: info: initialization of "Block" proved
spark_argon2id-blake2b.adb:334:07: info: initialization of "Offset" proved
spark_argon2id-blake2b.adb:335:07: info: initialization of "Remaining" proved
spark_argon2id-blake2b.adb:336:43: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:347:54: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:359:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:359:20: medium: "State" might not be initialized
  359 |         Compress (State, Block, 0, True);
      |                   ^~~~~
spark_argon2id-blake2b.adb:361:49: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:363:20: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:363:23: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:369:24: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:371:26: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:373:31: info: loop variant proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:375:13: info: loop invariant initialization proved (CVC5: 3 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:375:13: info: loop invariant preservation proved (CVC5: 3 VC in max 0.0 seconds and 148 steps)
spark_argon2id-blake2b.adb:376:36: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:377:21: info: overflow check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:377:38: info: division check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:379:19: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:379:19: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:379:45: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:380:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:380:20: medium: "State" might not be initialized
  380 |         Compress (State, Block, U64 (Offset - Message'First + 128), False);
      |                   ^~~~~
spark_argon2id-blake2b.adb:380:46: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:380:62: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:380:62: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:381:27: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:385:33: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:385:42: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:385:42: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:389:10: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:389:17: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:389:22: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:389:33: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:389:36: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:389:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:390:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:390:20: medium: "State" might not be initialized
  390 |         Compress (State, Block, U64 (Message'Length), True);
      |                   ^~~~~
spark_argon2id-blake2b.adb:390:46: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:393:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-blake2b.adb:393:20: medium: "State" might not be initialized
  393 |         Compress (State, Block, U64 (Message'Length), True);
      |                   ^~~~~
spark_argon2id-blake2b.adb:393:46: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.adb:398:46: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:400:17: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.adb:400:20: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.ads:96:07: info: initialization of "Output" proved
spark_argon2id-blake2b.ads:98:06: info: data dependencies proved
spark_argon2id-blake2b.ads:99:23: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)

spark_argon2id-blake2b.ads:100:06: warning: postcondition does not check the outcome of calling "Hash"
  100 |     Post   => Output'Length = 64;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-blake2b.ads:100:16: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.ads:120:07: info: initialization of "Output" proved
spark_argon2id-blake2b.ads:122:06: info: data dependencies proved
spark_argon2id-blake2b.ads:124:23: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-blake2b.ads:125:16: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-blake2b.ads:151:06: info: data dependencies proved

spark_argon2id-blake2b.ads:153:06: warning: postcondition does not check the outcome of calling "Compress"
  153 |     Post   => State'Length = 8;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~
spark_argon2id-blake2b.ads:153:16: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:20:13: info: implicit aspect Always_Terminates on "LE32" has been proved, subprogram will terminate
spark_argon2id-h0.adb:21:22: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:22:50: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:23:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:24:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:26:07: info: data dependencies proved
spark_argon2id-h0.adb:27:17: info: postcondition proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:45: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:55: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:63: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:69: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:77: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:82: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:90: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:90: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:50:107: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:51:07: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:51:56: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:57:41: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:58:53: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 1 step)

spark_argon2id-h0.adb:61:14: warning: unused assignment
   61 |      H0_Out := [others => 0];
      |      ~~~~~~~^~~~~~~~~~~~~~~
spark_argon2id-h0.adb:61:14: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:64:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:64:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:64:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:64:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:64:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:64:39: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:65:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:68:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:68:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:68:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:68:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:68:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:68:39: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 4 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:69:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:72:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 80 steps)
spark_argon2id-h0.adb:72:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:72:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:72:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:72:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:72:39: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 120 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:73:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:76:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 213 steps)
spark_argon2id-h0.adb:76:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:76:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 23 steps)
spark_argon2id-h0.adb:76:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:76:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:76:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:76:39: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 256 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:77:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 86 steps)
spark_argon2id-h0.adb:80:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 364 steps)
spark_argon2id-h0.adb:80:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:80:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 159 steps)
spark_argon2id-h0.adb:80:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:80:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:80:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:80:39: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 410 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:81:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 233 steps)
spark_argon2id-h0.adb:84:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 536 steps)
spark_argon2id-h0.adb:84:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:84:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 316 steps)
spark_argon2id-h0.adb:84:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:84:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:84:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:84:39: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 585 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:85:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 400 steps)
spark_argon2id-h0.adb:88:07: info: range check proved (CVC5: 4 VC in max 0.0 seconds and 754 steps)
spark_argon2id-h0.adb:88:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:88:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 510 steps)
spark_argon2id-h0.adb:88:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:88:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:88:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:88:39: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 806 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:88:58: info: range check proved (CVC5: 1 VC in max 0.0 seconds and 623 steps)
spark_argon2id-h0.adb:89:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 604 steps)
spark_argon2id-h0.adb:90:07: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 920 steps)
spark_argon2id-h0.adb:90:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 794 steps)
spark_argon2id-h0.adb:90:31: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 880 steps)
spark_argon2id-h0.adb:90:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:90:41: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 707 steps)
spark_argon2id-h0.adb:90:41: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:90:49: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 795 steps)
spark_argon2id-h0.adb:90:54: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:90:57: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 857 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:91:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:91:34: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:94:07: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 1149 steps)
spark_argon2id-h0.adb:94:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:94:31: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 1118 steps)
spark_argon2id-h0.adb:94:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:94:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:94:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:94:39: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 1203 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:94:54: info: range check proved (CVC5: 1 VC in max 0.1 seconds and 991 steps)
spark_argon2id-h0.adb:95:24: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 1244 steps)
spark_argon2id-h0.adb:96:07: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 1358 steps)
spark_argon2id-h0.adb:96:14: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 1210 steps)
spark_argon2id-h0.adb:96:31: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 1311 steps)
spark_argon2id-h0.adb:96:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:96:37: info: range check proved (CVC5: 2 VC in max 0.1 seconds and 1103 steps)
spark_argon2id-h0.adb:96:37: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:96:45: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 1210 steps)
spark_argon2id-h0.adb:96:50: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:96:53: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 1280 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:97:24: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:97:30: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:100:07: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 1610 steps)
spark_argon2id-h0.adb:100:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:100:31: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 1574 steps)
spark_argon2id-h0.adb:100:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:100:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:100:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:100:39: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 1674 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:101:24: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 1727 steps)
spark_argon2id-h0.adb:103:10: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 1863 steps)
spark_argon2id-h0.adb:103:17: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 1685 steps)
spark_argon2id-h0.adb:103:34: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 1819 steps)
spark_argon2id-h0.adb:103:34: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:103:39: info: range check proved (CVC5: 2 VC in max 0.1 seconds and 1566 steps)
spark_argon2id-h0.adb:103:39: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:103:47: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 1685 steps)
spark_argon2id-h0.adb:103:52: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:103:55: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 1782 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:104:27: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:104:32: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:108:07: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 2172 steps)
spark_argon2id-h0.adb:108:14: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:108:31: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 2163 steps)
spark_argon2id-h0.adb:108:31: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:108:31: info: index check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:108:36: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:108:39: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 2213 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:109:24: info: overflow check proved (CVC5: 2 VC in max 0.2 seconds and 2192 steps)
spark_argon2id-h0.adb:111:10: info: range check proved (CVC5: 4 VC in max 0.1 seconds and 2281 steps)
spark_argon2id-h0.adb:111:17: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 2285 steps)
spark_argon2id-h0.adb:111:34: info: overflow check proved (CVC5: 2 VC in max 0.1 seconds and 2256 steps)
spark_argon2id-h0.adb:111:34: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:111:51: info: range check proved (CVC5: 2 VC in max 0.1 seconds and 1906 steps)
spark_argon2id-h0.adb:111:51: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:111:59: info: index check proved (CVC5: 2 VC in max 0.1 seconds and 2285 steps)
spark_argon2id-h0.adb:111:64: info: length check proved (CVC5: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:111:67: info: length check proved (CVC5: 3 VC in max 0.1 seconds and 2146 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)
spark_argon2id-h0.adb:112:27: info: overflow check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:112:44: info: range check proved (CVC5: 2 VC in max 0.0 seconds and 1 step)
spark_argon2id-h0.adb:117:63: info: range check proved (CVC5: 2 VC in max 0.2 seconds and 2282 steps)
spark_argon2id-h0.adb:119:17: info: precondition proved (CVC5: 1 VC in max 0.2 seconds and 2626 steps)
spark_argon2id-h0.adb:120:24: info: range check proved (CVC5: 4 VC in max 0.2 seconds and 2354 steps)
spark_argon2id-h0.adb:121:24: info: length check proved (CVC5: 3 VC in max 0.2 seconds and 2399 steps; Trivial: 1 VC in max 0.0 seconds and 2 steps)

spark_argon2id-h0.adb:126:29: warning: statement has no effect
  126 |      Spark_Argon2id.Zeroize.Wipe (Input);
      |      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~

spark_argon2id-h0.adb:126:36: warning: "Input" is set by "Wipe" but not used after the call
  126 |      Spark_Argon2id.Zeroize.Wipe (Input);
      |                                   ^~~~~

spark_argon2id-h0.adb:130:17: warning: this statement is never reached
  130 |         H0_Out := [others => 0];
      |         ~~~~~~~^~~~~~~~~~~~~~~

spark_argon2id-h0.adb:131:32: warning: this statement is never reached
  131 |         Spark_Argon2id.Zeroize.Wipe (Input);
      |         ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
spark_argon2id-h0.ads:68:07: info: initialization of "H0_Out" proved
spark_argon2id-h0.ads:70:07: info: data dependencies proved
spark_argon2id-h0.ads:79:17: info: postcondition proved (CVC5: 1 VC in max 0.1 seconds and 2036 steps)
Summary logged in /Users/sicarii/Desktop/Desktop - MacBook Pro/spark_argon2id/obj/gnatprove/gnatprove.out
